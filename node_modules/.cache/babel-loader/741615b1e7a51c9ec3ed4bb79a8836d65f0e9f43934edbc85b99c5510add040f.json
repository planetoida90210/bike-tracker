{"ast":null,"code":"var _jsxFileName = \"/Users/emanueldelawarski/Documents/Builds/bike-tracker/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { supabase } from '../utils/supabaseClient';\n\n// Tworzenie kontekstu autentykacji\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Hook do używania kontekstu autentykacji\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Provider kontekstu autentykacji\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Sprawdzenie sesji przy ładowaniu\n  useEffect(() => {\n    const checkSession = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.auth.getSession();\n        if (error) {\n          throw error;\n        }\n        if (data !== null && data !== void 0 && data.session) {\n          const {\n            data: userData,\n            error: userError\n          } = await supabase.auth.getUser();\n          if (userError) {\n            throw userError;\n          }\n          setUser(userData.user);\n        }\n      } catch (err) {\n        console.error('Błąd sprawdzania sesji:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkSession();\n\n    // Nasłuchiwanie zmian w autentykacji\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      if (session) {\n        const {\n          data: userData\n        } = await supabase.auth.getUser();\n        setUser(userData.user);\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    });\n    return () => {\n      if (authListener) {\n        authListener.subscription.unsubscribe();\n      }\n    };\n  }, []);\n\n  // Funkcja logowania\n  const signIn = async (email, password) => {\n    try {\n      setLoading(true);\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) {\n        throw error;\n      }\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Funkcja rejestracji\n  const signUp = async (email, password, username) => {\n    try {\n      setLoading(true);\n\n      // Rejestracja użytkownika\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email,\n        password\n      });\n      if (error) {\n        throw error;\n      }\n\n      // Dodanie profilu użytkownika\n      if (data.user) {\n        const {\n          error: profileError\n        } = await supabase.from('profiles').insert([{\n          id: data.user.id,\n          username,\n          created_at: new Date()\n        }]);\n        if (profileError) {\n          throw profileError;\n        }\n      }\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Funkcja wylogowania\n  const signOut = async () => {\n    try {\n      setLoading(true);\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) {\n        throw error;\n      }\n      setUser(null);\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Wartość kontekstu\n  const value = {\n    user,\n    loading,\n    error,\n    signIn,\n    signUp,\n    signOut\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","supabase","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","checkSession","data","auth","getSession","session","userData","userError","getUser","err","console","message","authListener","onAuthStateChange","event","subscription","unsubscribe","signIn","email","password","signInWithPassword","signUp","username","profileError","from","insert","id","created_at","Date","signOut","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emanueldelawarski/Documents/Builds/bike-tracker/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { supabase } from '../utils/supabaseClient';\n\n// Tworzenie kontekstu autentykacji\nconst AuthContext = createContext(null);\n\n// Hook do używania kontekstu autentykacji\nexport const useAuth = () => useContext(AuthContext);\n\n// Provider kontekstu autentykacji\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Sprawdzenie sesji przy ładowaniu\n  useEffect(() => {\n    const checkSession = async () => {\n      try {\n        const { data, error } = await supabase.auth.getSession();\n        \n        if (error) {\n          throw error;\n        }\n        \n        if (data?.session) {\n          const { data: userData, error: userError } = await supabase.auth.getUser();\n          \n          if (userError) {\n            throw userError;\n          }\n          \n          setUser(userData.user);\n        }\n      } catch (err) {\n        console.error('Błąd sprawdzania sesji:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkSession();\n\n    // Nasłuchiwanie zmian w autentykacji\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      async (event, session) => {\n        if (session) {\n          const { data: userData } = await supabase.auth.getUser();\n          setUser(userData.user);\n        } else {\n          setUser(null);\n        }\n        setLoading(false);\n      }\n    );\n\n    return () => {\n      if (authListener) {\n        authListener.subscription.unsubscribe();\n      }\n    };\n  }, []);\n\n  // Funkcja logowania\n  const signIn = async (email, password) => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      });\n\n      if (error) {\n        throw error;\n      }\n\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Funkcja rejestracji\n  const signUp = async (email, password, username) => {\n    try {\n      setLoading(true);\n      \n      // Rejestracja użytkownika\n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n      });\n\n      if (error) {\n        throw error;\n      }\n\n      // Dodanie profilu użytkownika\n      if (data.user) {\n        const { error: profileError } = await supabase\n          .from('profiles')\n          .insert([\n            { \n              id: data.user.id, \n              username,\n              created_at: new Date(),\n            }\n          ]);\n\n        if (profileError) {\n          throw profileError;\n        }\n      }\n\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Funkcja wylogowania\n  const signOut = async () => {\n    try {\n      setLoading(true);\n      const { error } = await supabase.auth.signOut();\n      \n      if (error) {\n        throw error;\n      }\n      \n      setUser(null);\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Wartość kontekstu\n  const value = {\n    user,\n    loading,\n    error,\n    signIn,\n    signUp,\n    signOut,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}